"""API views for social_network."""

from rest_framework import viewsets
from rest_framework.decorators import api_view, detail_route
from rest_framework.response import Response
from rest_framework.reverse import reverse

from .models import Profile, Post, Vote
from .serializers import ProfileSerializer, PostSerializer


@api_view(['GET'])
def api_root(request, format=None):
    """Root of API, this is useful for documentation generated by DRF."""
    return Response({
        'profiles': reverse('profile-list', request=request, format=format),
        'posts': reverse('post-list', request=request, format=format)
    })


class ProfileViewSet(viewsets.ReadOnlyModelViewSet):
    """This provides get and list functionality for Profiles."""

    queryset = Profile.objects.all()
    serializer_class = ProfileSerializer


class PostViewSet(viewsets.ModelViewSet):
    """This provides r/w access to Posts."""

    queryset = Post.objects.all()
    serializer_class = PostSerializer

    def perform_create(self, serializer):
        """Create a Post associated with the logged-in user."""
        serializer.save(owner=self.request.user.profile)

    @detail_route(methods=['POST'], url_path='vote')
    def vote(self, request, pk=None):
        """Vote on a post."""
        post = self.get_object()
        new_vote = Vote(profile=self.request.user.profile, post=post)
        new_vote.save()
        data = PostSerializer(post, context={'request': self.request}).data
        return Response(data)
